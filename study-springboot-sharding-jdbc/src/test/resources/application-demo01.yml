server:
  port: 10011
spring:
  application:
    name: study-springboot-sharding-jdbc
  sharding-sphere:
    # 配置数据源具体内容
    datasource:
      names: ds0,ds1,ds2
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://172.16.51.75:6033/satisfaction_report?serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
        username: ${spring.datasource.username}
        password: ${spring.datasource.password}
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://172.16.51.75:6033/satisfaction_report?serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
        username: ${spring.datasource.username}
        password: ${spring.datasource.password}
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://172.16.51.75:6033/satisfaction_questionnaire?serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
        username: ${spring.datasource.username}
        password: ${spring.datasource.password}
    # 指定数据库的分布情况，配置表在那个数据库中，表名称是什么
    sharding:
      default-data-source-name: ds0
      tables:
        # questionnaire库
        ds2:
          actual-data-nodes: ds2.ques_questionnaire_$->${sharding.nodes}
          tableStrategy:
            hint:
              algorithm-class-name: ${sharding.hint-year}
        ques_questionnaire_answer:
          actual-data-nodes: ds2.ques_questionnaire_answer_$->${sharding.nodes}
          tableStrategy:
            hint:
              algorithm-class-name: ${sharding.hint-year}
        ques_questionnaire_answer_reason:
          actual-data-nodes: ds2.ques_questionnaire_answer_reason_$->${sharding.nodes}
          tableStrategy:
            hint:
              algorithm-class-name: ${sharding.hint-year}
        sp_survey_plan:
          actual-data-nodes: ds2.sp_survey_plan
          table-strategy:
            standard:
              sharding-column: id
              precise-algorithm-class-name: org.apache.shardingsphere.api.algorithm.sharding.PreciseShardingAlgorithm
        # report库
        report_ov_general_data:
          actual-data-nodes: ds1.report_ov_general_data_$->${sharding.nodes}
          table-strategy:
            inline:
              sharding-column: statistics_year
              algorithm-expression: report_ov_general_data_${statistics_year}
        report_ov_area_company_data:
          actual-data-nodes: ds1.report_ov_area_company_data_$->${sharding.nodes}
          table-strategy:
            inline:
              sharding-column: statistics_year
              algorithm-expression: report_ov_area_company_data_${statistics_year}
        report_ov_city_company_data:
          actual-data-nodes: ds1.report_ov_city_company_data_$->${sharding.nodes}
          table-strategy:
            inline:
              sharding-column: statistics_year
              algorithm-expression: report_ov_city_company_data_${statistics_year}
        report_ov_project_data:
          actual-data-nodes: ds1.report_ov_project_data_$->${sharding.nodes}
          table-strategy:
            inline:
              sharding-column: statistics_year
              algorithm-expression: report_ov_project_data_${statistics_year}

    props:
      sql:
        # 打开SQL输出日志
        show: true

# 整合mybatis
mybatis:
  type-aliases-package: top.kangyong.sbsj.mapper
