server:
  port: 10011
spring:
  application:
    name: study-springboot-sharding-jdbc
  sharding-sphere:
    # 配置数据源具体内容
    datasource:
      names: ds1,ds2
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://172.16.51.75:6033/satisfaction_report?serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
        username: ${spring.datasource.username}
        password: ${spring.datasource.password}
        #初始化连接数
        druid.initial-size: 10
        #最小连接数
        druid.min-idle: 100
        #最大连接数
        druid.max-active: 1000
        #获取连接时最大等待时间，单位毫秒
        druid.max-wait: 60000
        #检测连接是否有效
        druid.validation-query: SELECT 1 FROM DUAL
        druid.test-on-borrow: false
        druid.test-on-return: false
        #检查空闲连接有效性
        druid.test-while-idle: true
        #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        druid.time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        druid.min-victable-idle-time-millis: 300000
        #查询超时时间 单位是毫秒
        druid.query-timeout: 60000
        #保持连接活动
        #druid.keep-alive: true
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录:单位秒
        druid.connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://172.16.51.75:6033/satisfaction_questionnaire?serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
        username: ${spring.datasource.username}
        password: ${spring.datasource.password}
        #初始化连接数
        druid.initial-size: 10
        #最小连接数
        druid.min-idle: 100
        #最大连接数
        druid.max-active: 1000
        #获取连接时最大等待时间，单位毫秒
        druid.max-wait: 60000
        #检测连接是否有效
        druid.validation-query: SELECT 1 FROM DUAL
        druid.test-on-borrow: false
        druid.test-on-return: false
        #检查空闲连接有效性
        druid.test-while-idle: true
        #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        druid.time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        druid.min-victable-idle-time-millis: 300000
        #查询超时时间 单位是毫秒
        druid.query-timeout: 60000
        #保持连接活动
        #druid.keep-alive: true
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录:单位秒
        druid.connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 指定数据库的分布情况，配置表在那个数据库中，表名称是什么
    sharding:
      tables:
        # questionnaire库
        ds2:
          actual-data-nodes: ds2.ques_questionnaire_$->${sharding.nodes}
          tableStrategy:
            hint:
              algorithm-class-name: ${sharding.hint-year}
        ques_questionnaire_answer:
          actual-data-nodes: ds2.ques_questionnaire_answer_$->${sharding.nodes}
          tableStrategy:
            hint:
              algorithm-class-name: ${sharding.hint-year}
        ques_questionnaire_answer_reason:
          actual-data-nodes: ds2.ques_questionnaire_answer_reason_$->${sharding.nodes}
          tableStrategy:
            hint:
              algorithm-class-name: ${sharding.hint-year}
        # report库
        report_ov_general_data:
          actual-data-nodes: ds1.report_ov_general_data_$->${sharding.nodes}
          table-strategy:
            inline:
              sharding-column: statistics_year
              algorithm-expression: report_ov_general_data_${statistics_year}
        report_ov_area_company_data:
          actual-data-nodes: ds1.report_ov_area_company_data_$->${sharding.nodes}
          table-strategy:
            inline:
              sharding-column: statistics_year
              algorithm-expression: report_ov_area_company_data_${statistics_year}
        report_ov_city_company_data:
          actual-data-nodes: ds1.report_ov_city_company_data_$->${sharding.nodes}
          table-strategy:
            inline:
              sharding-column: statistics_year
              algorithm-expression: report_ov_city_company_data_${statistics_year}
        report_ov_project_data:
          actual-data-nodes: ds1.report_ov_project_data_$->${sharding.nodes}
          table-strategy:
            inline:
              sharding-column: statistics_year
              algorithm-expression: report_ov_project_data_${statistics_year}
      default-table-strategy:
        none:

    props:
      sql:
        # 打开SQL输出日志
        show: true

# 整合mybatis
mybatis:
  type-aliases-package: top.kangyong.sbsj.mapper
